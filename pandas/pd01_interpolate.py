# pd01_interpolate.py

"""
결측치 처리 (수치형 데이터)
1. 삭제 - 행 또는 열
2. 임의의 값
    - 0 : fillna
    - 평균 : mean (이상치의 문제가 있음)
    - 중위 : median
    - 앞값 : ffill (시계열에서 주로)
    - 뒷값 : bfill (시계열에서 주로)
    - 특정값 : 777 (조건 보고 넣는게 낫다)
    - 기타등등...
3. interpolate - 보간(알려진 데이터 점 집합의 범위 내에 새 데이터 점을 추가하는 기법)
4. 모델 : .predict (값을 예측해서), (전혀 다른 모델사용)
    - ex) 결측치가 들어간 행만 추출해서 나머지 컬럼으로 결측된 컬럼의 값을 예측
5. 부스팅 계열 모델 : 통상 이상치, 결측치에 대해 영향을 덜 받는다.

"""

import pandas as pd
import numpy as np

dates = [
    '16/07/2025','17/07/2025', '18/07/2025', 
    '19/07/2025', '20/07/2025', '21/07/2025',  
]
dates = pd.to_datetime(dates)
print(dates)
# DatetimeIndex(['2025-07-16', '2025-07-17', '2025-07-18', '2025-07-19',
#                '2025-07-20', '2025-07-21'],
#               dtype='datetime64[ns]', freq=None)

print("====================================================================")
ts = pd.Series([2, np.nan, np.nan, 8, 10, np.nan], index=dates)
print(ts)
# 2025-07-16     2.0
# 2025-07-17     NaN
# 2025-07-18     NaN
# 2025-07-19     8.0
# 2025-07-20    10.0
# 2025-07-21     NaN

ts = ts.interpolate()
print(ts)
# 2025-07-16     2.0
# 2025-07-17     4.0
# 2025-07-18     6.0
# 2025-07-19     8.0
# 2025-07-20    10.0
# 2025-07-21    10.0
# -> 보간계산할때는 전부 float로 바꿔서 계산함.

# 중간값들은 linear로 채워짐. 마지막은 ffill(이전값으로 채워짐)